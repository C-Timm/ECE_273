/*
 * Lab_8.c Voltmeter
 *
 * Created: 3/12/2019 1:02:54 PM
 * Author : crtimm17
 * SDR : 
Hardware 
   2 : 7x5 LED Matrix
   12 : 47 Ohm resistors
 Voltmeter probe attached to PF7 to read the voltage. this set up is in single ended mode and can read from 0 - 2.6 V 
 to change that change Reference select bits in ADMUX
7x5 LED Matrix (1)(Minutes)                         
     PC pins : wiring cathodes of matrix              
PC0 wired to matrix pin 1                         
PC1 wired to matrix pin 3                           
PC2 wired to matrix pin 10
PC3 wired to matrix pin 7
PC4 wired to matrix pin 8
     PF pins : wiring anodes of LED matrix
PF0 to 47 Ohm resistor to matrix pin 12
PF1 to 47 Ohm resistor to matrix pin 11
PF2 to 47 Ohm resistor to matrix pin 2
PF4 to 47 Ohm resistor to matrix pin 4
PF5 to 47 Ohm resistor to matrix pin 5
PF6 to 47 Ohm resistor to matrix pin 6
7x5 LED Matrix (2)(Seconds)                          
     PB pins : wiring cathodes of matrix            
PB0 wired to matrix pin 1                         
PB1 wired to matrix pin 3                        
PB2 wired to matrix pin 10
PB3 wired to matrix pin 7
PB4 wired to matrix pin 8
     PD pins : wiring anodes of LED matrix
PD0 to 47 Ohm resistor to matrix pin 12
PD1 to 47 Ohm resistor to matrix pin 11
PD2 to 47 Ohm resistor to matrix pin 2
PD4 to 47 Ohm resistor to matrix pin 4
PD5 to 47 Ohm resistor to matrix pin 5
PD6 to 47 Ohm resistor to matrix pin 6


 */ 

#include <avr/io.h>
#include <stdint.h>
#include <avr/interrupt.h>


void display_digits_right();
void display_digits_left();
void config_io();
uint32_t display_tho =0;
uint32_t display_hund =0;
uint32_t display_ten =0;
uint32_t display_one =0;

uint32_t raw = 0;

int main(void)
{
	CLKPR = 0x80; CLKPR = 0x00; // 16MHz Clock
	
	config_io();
	
	TCCR1A = 0X00;
	TCCR1B = 0x0D;
	OCR1A  = 62499;
	TIMSK1 |= (1<<OCIE1B);
	sei();
	
	ADMUX = 0xC7; 
	ADCSRA = 0xDF;
// 	ADCSRB = 0x05;
// 	DIDR0 |= (1<<7); 
// 	
    while (1) 
    {
		display_digits_left();
		display_digits_right();
		uint32_t Vmes = (int)((raw*2610)/1024); // Measured Voltage in mV
                                            // in Human math 
                                            //Vmes = ((raw*2.56)/1024)*1000
                                            //Where 2.56 is reference voltage
 		display_tho = Vmes/1000;
  		uint32_t rOne = Vmes % 1000;
 		display_hund = rOne/100;
 		uint32_t rTwo = rOne % 100;
 		display_ten = rTwo/10;
		uint32_t rThree = rTwo % 10;
 		display_one = rThree % 10;
    }
}

ISR(TIMER1_COMPA_vect){
	ADCSRA = 0xDF;
}

ISR(ADC_vect){ 
  raw = ADCW;
 TIMSK1 |= (1<<OCIE1B);
 }

void config_io(){
	DDRF = 0xFF;
	DDRC = 0xFF;
	DDRB = 0xFF;
	DDRD = 0xFF;
	DDRF &= ~(1<<7);
}

void display_digits_left(){
	const uint8_t cathodes[5]= {1<<4, 1<<3, 1<<2, 1<<1, 1<<0};
	const int8_t allDigits [11][5] =
	{						// Numbers
		{0x2,0x5,0x5,0x5,0x2}, // 0
		{0x2,0x3,0x2,0x2,0x7}, // 1
		{0x3,0x4,0x2,0x1,0x7}, // 2
		{0x7,0x4,0x6,0x4,0x7}, // 3
		{0x4,0x6,0x7,0x4,0x4}, // 4
		{0x7,0x1,0x7,0x4,0x7}, // 5
		{0x4,0x2,0x7,0x5,0x7}, // 6
		{0x7,0x0,0x2,0x0,0x1}, // 7
		{0x7,0x5,0x7,0x5,0x7}, // 8
		{0x7,0x7,0x4,0x4,0x4}, // 9
	};

	static int q = 0;
	PORTF = 0x00;
	PORTC = ~cathodes[q];
	PORTF = (allDigits[display_tho][q]) | (allDigits[display_hund][q] << 4);  // anodes: high is active
	if(q==4){
		q=0;
		}else {
		q=q+1;
	}
}


void display_digits_right(){
	const uint8_t cathodes[5]= {1<<4, 1<<3, 1<<2, 1<<1, 1<<0};
	const int8_t allDigits [11][5] =
	{					    // Numbers
		{0x2,0x5,0x5,0x5,0x2}, // 0
		{0x2,0x3,0x2,0x2,0x7}, // 1
		{0x3,0x4,0x2,0x1,0x7}, // 2
		{0x7,0x4,0x6,0x4,0x7}, // 3
		{0x4,0x6,0x7,0x4,0x4}, // 4
		{0x7,0x1,0x7,0x4,0x7}, // 5
		{0x4,0x2,0x7,0x5,0x7}, // 6
		{0x7,0x0,0x2,0x0,0x1}, // 7
		{0x7,0x5,0x7,0x5,0x7}, // 8
		{0x7,0x7,0x4,0x4,0x4}, // 9
	};
	static int q = 0;
	PORTD = 0x00;
	PORTB = ~cathodes[q];
	PORTD = (allDigits[display_ten][q]) | (allDigits[display_one][q] << 4)  ;  // anodes: high is active
	if(q==4){
		q=0;
		}else {
		q=q+1;
	}
}
